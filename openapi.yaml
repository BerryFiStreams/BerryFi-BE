openapi: 3.0.3
info:
  title: BerryFi Studio API
  description: |-
    This document provides the official API specification for the BerryFi Studio Pixel Streaming Platform.
    It is intended for backend developers to implement the required endpoints for the frontend application.
  version: 1.0.0
  contact:
    name: Shubham Bokade
    email: bloggersbokade17@gmail.com
servers:
  - url: https://api.berryfi.studio/v1
    description: Production server for BerryFi Studio API

tags:
  - name: Authentication
    description: Endpoints related to user authentication, session management, and token refreshing.
  - name: Projects
    description: Endpoints related to project management, configuration, branding, links, and status.
  - name: Billing
    description: Endpoints related to billing, balance, transactions, plans, usage, and support.
  - name: Team
    description: Endpoints related to team members, campaigns, stats, and leads management.
  - name: Workspaces
    description: Endpoints related to workspace management, credits, stats, and members.
  - name: Analytics
    description: Endpoints related to analytics, usage, leads, dashboard, and export.
  - name: Audit
    description: Endpoints related to audit logs, stats, users, action types, and export.
  - name: Usage
    description: Endpoints related to usage session logs, stats, workspaces, members, and export.
  - name: Reports
    description: Endpoints related to dashboard reports and analytics.

components:
  # ============================
  # ====== Schema Definitions ======
  # ============================
  schemas:
    # ====== Core Entity Schemas ======
    User:
      type: object
      description: Represents a user account in the system.
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the user.
          example: "user_mithesh"
          readOnly: true
        name:
          type: string
          description: The full name of the user.
          example: "Mithesh Bhat"
        email:
          type: string
          format: email
          description: The user's unique email address, used for login.
          example: "mithesh@ravgroup.org"
        role:
          type: string
          enum: [super_admin, org_owner, org_admin, org_auditor, org_reporter, org_billing, org_member, workspace_admin, workspace_auditor, workspace_reporter, workspace_billing, workspace_member]
          description: The role of the user, which determines their permissions.
          example: "org_owner"
        accountType:
          type: string
          enum: [organization, workspace]
          description: The type of account the user belongs to.
          example: "organization"
        organizationId:
          type: string
          description: The organization ID for the user.
          example: "ravgroup"
        workspaceId:
          type: string
          description: The workspace ID for the user (if applicable).
          example: "apexmarketing"
        status:
          type: string
          enum: [active, invited, disabled]
          description: The current status of the user account.
          example: "active"
        lastLogin:
          type: string
          format: date-time
          description: The timestamp of the user's last successful login.
          readOnly: true
          example: "2024-01-15T10:30:00Z"

    # ====== Request/Response Schemas ======
    LoginRequest:
      type: object
      description: Credentials required for a user to log in.
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "admin@berryfi.com"
        password:
          type: string
          format: password
          description: User's password. Must be at least 8 characters.
          minLength: 8
          example: "SuperSecurePassword@123"

    AuthResponse:
      type: object
      description: The response payload after a successful authentication, containing tokens and user info.
      properties:
        user:
          $ref: "#/components/schemas/User"
        accessToken:
          type: string
          description: A short-lived JWT (JSON Web Token) for authenticating subsequent API requests.
          example: "mock_jwt_token_user_mithesh_1705312200000"
        refreshToken:
          type: string
          description: A long-lived token used to obtain a new access token without requiring the user to log in again.
          example: "mock_refresh_token_user_mithesh_1705312200000"

    RefreshTokenRequest:
      type: object
      description: The refresh token required to obtain a new access token.
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: The long-lived refresh token obtained during login.
          example: "mock_refresh_token_user_mithesh_1705312200000"

    RefreshTokenResponse:
      type: object
      description: The response payload after a successful token refresh.
      properties:
        accessToken:
          type: string
          description: A new, short-lived JWT for API authentication.
          example: "mock_jwt_token_refreshed_1705312200000"

    # ====== Standard Error Schema ======
    ApiError:
      type: object
      description: A standard error response format for client (4xx) and server (5xx) errors.
      required:
        - statusCode
        - message
      properties:
        statusCode:
          type: integer
          format: int32
          description: The HTTP status code.
          example: 400
        message:
          type: string
          description: A human-readable description of the error.
          example: "Invalid email format"
        error:
          type: string
          description: A short, machine-readable error string.
          example: "Bad Request"

  # ============================
  # ====== Security Schemes ======
  # ============================
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT Authorization header using the Bearer scheme. The token is a short-lived **access token** obtained from the `/auth/login` or `/auth/refresh` endpoints."

# ============================
# ====== Global Security ======
# ============================
security:
  - BearerAuth: [] # Apply Bearer Authentication globally to all endpoints by default.

# ============================
# ====== API Paths & Endpoints ======
# ============================
paths:
  /auth/login:
    post:
      tags: [Authentication]
      summary: User Login
      description: Authenticates a user with their email and password. Returns user details, a short-lived `accessToken`, and a long-lived `refreshToken`.
      operationId: loginUser
      security: [] # This endpoint does not require an access token.
      requestBody:
        description: User credentials for login.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Authentication successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Bad Request. The request body is malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "401":
          description: Unauthorized. The provided email or password is incorrect.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
                example:
                  statusCode: 401
                  message: "Invalid email or password."
                  error: "Unauthorized"

  /auth/refresh:
    post:
      tags: [Authentication]
      summary: Refresh Access Token
      description: Obtains a new `accessToken` by providing a valid `refreshToken`. This is used to maintain a user's session without requiring them to log in again.
      operationId: refreshAccessToken
      security: [] # This endpoint does not require an access token.
      requestBody:
        description: The long-lived refresh token obtained from a successful login.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
      responses:
        "200":
          description: Access token refreshed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "401":
          description: Unauthorized. The provided refresh token is invalid, expired, or has been revoked. The user must log in again.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /auth/me:
    get:
      tags: [Authentication]
      summary: Get Current User
      description: Retrieves the profile of the currently authenticated user based on the provided `accessToken`.
      operationId: getCurrentUser
      responses:
        "200":
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized. The `accessToken` is missing, malformed, or expired. The client should attempt to use the `refreshToken` to get a new one.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "403":
          description: Forbidden. The user's account is disabled or lacks permission for this action, even with a valid token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /auth/logout:
    post:
      tags: [Authentication]
      summary: User Logout
      description: Logs out the current user. The backend should invalidate the `refreshToken` to prevent it from being used to generate new access tokens.
      operationId: logoutUser
      responses:
        "204":
          description: Logout successful. No content is returned.
        "401":
          description: Unauthorized. The request was made without a valid `accessToken`.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /projects:
    get:
      tags: [Projects]
      summary: List Projects
      description: Get a list of all projects accessible to the current user based on their role.
      operationId: listProjects
      responses:
        '200':
          description: List of projects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "river_castle_project"
                        name:
                          type: string
                          example: "River Castle Project"
                        description:
                          type: string
                          example: "Interactive Unreal Engine 3D walkthrough"
                        status:
                          type: string
                          enum: [running, stopped, deploying, error]
                          example: "running"
                        productionUrl:
                          type: string
                          example: "https://river-castle.berryfi.com"
                        workspaceId:
                          type: string
                          example: "apexmarketing"
                        organizationId:
                          type: string
                          example: "ravgroup"
                        accountType:
                          type: string
                          enum: [main_account, workspace]
                          example: "main_account"
                        totalCreditsUsed:
                          type: number
                          example: 2400.0
                        sessionsCount:
                          type: integer
                          example: 245

  /projects/{projectId}:
    get:
      tags: [Projects]
      summary: Get Project Details
      description: Get detailed information about a specific project.
      operationId: getProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Project details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      productionUrl:
                        type: string
                      config:
                        type: object
                      branding:
                        type: object
                      links:
                        type: object

  /projects/{projectId}/deploy:
    post:
      tags: [Projects]
      summary: Deploy Project
      description: Deploy a project to production.
      operationId: deployProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project deployed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /projects/{projectId}/stop:
    post:
      tags: [Projects]
      summary: Stop Project
      description: Stop a running project.
      operationId: stopProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project stopped successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /projects/{projectId}/config:
    get:
      tags: [Projects]
      summary: Get Project Config
      description: Get configuration for a project.
      operationId: getProjectConfig
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project config.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /projects/{projectId}/branding:
    get:
      tags: [Projects]
      summary: Get Branding Settings
      description: Get branding settings for a project.
      operationId: getBrandingSettings
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Branding settings.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /projects/{projectId}/links:
    get:
      tags: [Projects]
      summary: Get Link Settings
      description: Get link settings for a project.
      operationId: getLinkSettings
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Link settings.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /projects/{projectId}/status:
    get:
      tags: [Projects]
      summary: Get Project Status
      description: Get the current status of a project.
      operationId: getProjectStatus
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "running"
                      lastDeployed:
                        type: string
                        format: date-time
                      currentCCU:
                        type: integer
                        example: 15
                      uptime:
                        type: number
                        example: 99.5
                      errors:
                        type: array
                        items:
                          type: string

  /billing/balance:
    get:
      tags: [Billing]
      summary: Get Billing Balance
      description: Get the current billing balance for the user's account.
      operationId: getBillingBalance
      responses:
        '200':
          description: Current balance.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentBalance:
                    type: number
                    example: 50000
                  currency:
                    type: string
                    example: "USD"
                  lastUpdated:
                    type: string
                    format: date-time
                  isMainAccount:
                    type: boolean
                    example: true
                  workspaceId:
                    type: string
                    example: "apexmarketing"
                  workspaceName:
                    type: string
                    example: "Apex Marketing"

  /billing/usage:
    get:
      tags: [Billing]
      summary: Get Billing Usage
      description: Get billing usage statistics for the user's account.
      operationId: getBillingUsage
      responses:
        '200':
          description: Usage statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentMonthSpent:
                    type: number
                    example: 3200
                  lastMonthSpent:
                    type: number
                    example: 2800
                  spendingChange:
                    type: number
                    example: 14.3
                  projectedSpending:
                    type: number
                    example: 3500
                  usageBreakdown:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                          example: "Streaming"
                        amount:
                          type: number
                          example: 2560
                        percentage:
                          type: number
                          example: 80

  /billing/transactions:
    get:
      tags: [Billing]
      summary: Get Transactions
      description: Get billing transaction history.
      operationId: getBillingTransactions
      parameters:
        - in: query
          name: period
          required: false
          schema:
            type: string
            default: "30d"
          example: "30d"
      responses:
        '200':
          description: List of transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "tx_1705312200000_1"
                    date:
                      type: string
                      format: date-time
                    type:
                      type: string
                      enum: [credit_added, usage, allocation, refund]
                      example: "credit_added"
                    description:
                      type: string
                      example: "Credit purchase (Ref: REF_1705312200000_1)"
                    amount:
                      type: number
                      example: 5000
                    resultingBalance:
                      type: number
                      example: 45000
                    workspaceId:
                      type: string
                      example: "apexmarketing"
                    workspaceName:
                      type: string
                      example: "Apex Marketing"
                    status:
                      type: string
                      example: "completed"
                    reference:
                      type: string
                      example: "REF_1705312200000_1"

  /billing/plans:
    get:
      tags: [Billing]
      summary: Get Subscription Plans
      description: Get available subscription plans.
      operationId: getSubscriptionPlans
      responses:
        '200':
          description: List of plans.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "plan-starter"
                    name:
                      type: string
                      example: "Starter"
                    price:
                      type: number
                      example: 29
                    currency:
                      type: string
                      example: "USD"
                    credits:
                      type: number
                      example: 1000
                    features:
                      type: array
                      items:
                        type: string
                      example: ["5 Projects", "10 CCU", "Basic Support"]
                    maxCCU:
                      type: number
                      example: 10
                    isPopular:
                      type: boolean
                      example: false

  /billing/support:
    get:
      tags: [Billing]
      summary: Get Support Requests
      description: Get all billing support requests.
      operationId: getBillingSupportRequests
      responses:
        '200':
          description: List of support requests.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "support_1"
                    subject:
                      type: string
                      example: "Credit balance inquiry"
                    message:
                      type: string
                      example: "I need to check my current credit balance and usage."
                    priority:
                      type: string
                      enum: [low, medium, high]
                      example: "medium"
                    category:
                      type: string
                      example: "billing"
                    status:
                      type: string
                      enum: [open, in_progress, resolved, closed]
                      example: "open"
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    contactEmail:
                      type: string
                      example: "user@example.com"
                    contactPhone:
                      type: string
                      example: "+1234567890"

  /api/billing/overview:
    get:
      tags: [Billing]
      summary: Get Billing Overview
      description: Get comprehensive billing overview for the user's account.
      operationId: getBillingOverview
      parameters:
        - in: query
          name: userRole
          required: true
          schema:
            type: string
          example: "org_owner"
        - in: query
          name: accountId
          required: false
          schema:
            type: string
          example: "ravgroup"
      responses:
        '200':
          description: Billing overview.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: "ravgroup"
                      accountName:
                        type: string
                        example: "RAV Group"
                      accountType:
                        type: string
                        enum: [organization, workspace]
                        example: "organization"
                      status:
                        type: string
                        example: "active"
                      credits:
                        type: number
                        example: 50000
                      monthlyBudget:
                        type: number
                        example: 10000
                      billingCycle:
                        type: string
                        example: "monthly"
                      nextBillingDate:
                        type: string
                        example: "2024-02-01"
                      isMainAccount:
                        type: boolean
                        example: true
                      workspaceId:
                        type: string
                      workspaceName:
                        type: string

  /api/billing/invoices:
    get:
      tags: [Billing]
      summary: Get Invoices
      description: Get billing invoices for the user's account.
      operationId: getBillingInvoices
      parameters:
        - in: query
          name: userRole
          required: true
          schema:
            type: string
          example: "org_owner"
        - in: query
          name: accountId
          required: false
          schema:
            type: string
          example: "ravgroup"
      responses:
        '200':
          description: List of invoices.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "inv_001"
                        amount:
                          type: number
                          example: 5000
                        status:
                          type: string
                          enum: [paid, pending, overdue]
                          example: "paid"
                        date:
                          type: string
                          example: "2024-01-01"
                        description:
                          type: string
                          example: "Monthly subscription - January 2024"

  /api/billing/usage:
    get:
      tags: [Billing]
      summary: Get Billing Usage Data
      description: Get detailed billing usage data for the user's account.
      operationId: getBillingUsageData
      parameters:
        - in: query
          name: userRole
          required: true
          schema:
            type: string
          example: "org_owner"
        - in: query
          name: accountId
          required: false
          schema:
            type: string
          example: "ravgroup"
      responses:
        '200':
          description: Usage data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      currentMonth:
                        type: number
                        example: 3200
                      previousMonth:
                        type: number
                        example: 2800
                      projected:
                        type: number
                        example: 3500

  /api/billing/payment-methods:
    get:
      tags: [Billing]
      summary: Get Payment Methods
      description: Get payment methods for the user's account.
      operationId: getPaymentMethods
      parameters:
        - in: query
          name: userRole
          required: true
          schema:
            type: string
          example: "org_owner"
        - in: query
          name: accountId
          required: false
          schema:
            type: string
          example: "ravgroup"
      responses:
        '200':
          description: List of payment methods.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: "credit_card"
                        last4:
                          type: string
                          example: "4242"
                        expiryMonth:
                          type: integer
                          example: 12
                        expiryYear:
                          type: integer
                          example: 2025
                        brand:
                          type: string
                          example: "visa"

  /team/members:
    get:
      tags: [Team]
      summary: List Team Members
      description: Get a list of all team members accessible to the current user based on their role.
      operationId: listTeamMembers
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
      responses:
        '200':
          description: List of team members.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "user_mithesh"
                        name:
                          type: string
                          example: "Mithesh Bhat"
                        email:
                          type: string
                          example: "mithesh@ravgroup.org"
                        role:
                          type: string
                          enum: [org_owner, org_admin, org_auditor, org_reporter, org_billing, org_member, workspace_admin, workspace_auditor, workspace_reporter, workspace_billing, workspace_member]
                          example: "org_owner"
                        status:
                          type: string
                          enum: [active, invited, disabled]
                          example: "active"
                        joinedAt:
                          type: string
                          format: date-time
                          example: "2024-01-01T09:00:00Z"
                        organizationId:
                          type: string
                          example: "ravgroup"
                        workspaceId:
                          type: string
                          example: "apexmarketing"

  /team/campaigns:
    get:
      tags: [Team]
      summary: List Campaigns
      description: Get a list of all campaigns accessible to the current user based on their role.
      operationId: listCampaigns
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
      responses:
        '200':
          description: List of campaigns.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "camp_1"
                        name:
                          type: string
                          example: "Monsoon Magic"
                        customName:
                          type: string
                          example: "monsoon-magic"
                        projectId:
                          type: string
                          example: "river_castle_project"
                        projectName:
                          type: string
                          example: "River Castle Project"
                        accessType:
                          type: string
                          enum: [direct, lead_capture]
                          example: "lead_capture"
                        status:
                          type: string
                          enum: [active, paused, inactive]
                          example: "active"
                        url:
                          type: string
                          example: "https://river-castle.berryfi.com/campaign/monsoon-magic"
                        visits:
                          type: integer
                          example: 89
                        leads:
                          type: integer
                          example: 45
                        leadCaptureFields:
                          type: object
                          properties:
                            requireFirstName:
                              type: boolean
                              example: true
                            requireLastName:
                              type: boolean
                              example: true
                            requireEmail:
                              type: boolean
                              example: true
                            requirePhone:
                              type: boolean
                              example: true
                            enableOTP:
                              type: boolean
                              example: false
                        analytics:
                          type: object
                          properties:
                            totalVisits:
                              type: integer
                              example: 89
                            uniqueVisitors:
                              type: integer
                              example: 67
                            leadsCaptured:
                              type: integer
                              example: 45
                            conversionRate:
                              type: number
                              example: 0.506
    post:
      tags: [Team]
      summary: Create Campaign
      description: Create a new campaign.
      operationId: createCampaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - projectId
                - accessType
              properties:
                name:
                  type: string
                  example: "New Campaign"
                projectId:
                  type: string
                  example: "river_castle_project"
                accessType:
                  type: string
                  enum: [direct, lead_capture]
                  example: "lead_capture"
                leadCaptureFields:
                  type: object
                  properties:
                    requireFirstName:
                      type: boolean
                      example: true
                    requireLastName:
                      type: boolean
                      example: true
                    requireEmail:
                      type: boolean
                      example: true
                    requirePhone:
                      type: boolean
                      example: true
                    enableOTP:
                      type: boolean
                      example: false
      responses:
        '201':
          description: Campaign created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /team/campaigns/{campaignId}:
    patch:
      tags: [Team]
      summary: Update Campaign
      description: Update an existing campaign.
      operationId: updateCampaign
      parameters:
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
          example: "camp_1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Campaign"
                accessType:
                  type: string
                  enum: [direct, lead_capture]
                  example: "lead_capture"
                leadCaptureFields:
                  type: object
                status:
                  type: string
                  enum: [active, paused, inactive]
                  example: "active"
      responses:
        '200':
          description: Campaign updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
    delete:
      tags: [Team]
      summary: Delete Campaign
      description: Delete a campaign.
      operationId: deleteCampaign
      parameters:
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
          example: "camp_1"
      responses:
        '204':
          description: Campaign deleted successfully.

  /team/campaigns/{campaignId}/pause:
    post:
      tags: [Team]
      summary: Pause Campaign
      description: Pause an active campaign.
      operationId: pauseCampaign
      parameters:
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
          example: "camp_1"
      responses:
        '200':
          description: Campaign paused successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /team/campaigns/{campaignId}/resume:
    post:
      tags: [Team]
      summary: Resume Campaign
      description: Resume a paused campaign.
      operationId: resumeCampaign
      parameters:
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
          example: "camp_1"
      responses:
        '200':
          description: Campaign resumed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /team/campaigns/{campaignId}/copy-link:
    post:
      tags: [Team]
      summary: Copy Campaign Link
      description: Copy the campaign link to clipboard.
      operationId: copyCampaignLink
      parameters:
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
          example: "camp_1"
      responses:
        '200':
          description: Campaign link copied successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: "https://river-castle.berryfi.com/campaign/monsoon-magic"

  /team/leads:
    get:
      tags: [Team]
      summary: List Leads
      description: Get a list of leads, optionally filtered by campaign.
      operationId: listLeads
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: campaignId
          required: false
          schema:
            type: string
          example: "camp_1"
        - in: query
          name: status
          required: false
          schema:
            type: string
          example: "new"
      responses:
        '200':
          description: List of leads.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "lead_1"
                        firstName:
                          type: string
                          example: "Anjali"
                        lastName:
                          type: string
                          example: "Sharma"
                        email:
                          type: string
                          example: "anjali.sharma@gmail.com"
                        phone:
                          type: string
                          example: "+91 98765-43210"
                        campaignId:
                          type: string
                          example: "camp_1"
                        campaignName:
                          type: string
                          example: "Monsoon Magic"
                        projectId:
                          type: string
                          example: "river_castle_project"
                        projectName:
                          type: string
                          example: "River Castle Project"
                        status:
                          type: string
                          enum: [new, qualified, contacted, converted]
                          example: "new"
                        createdAt:
                          type: string
                          format: date-time
                        captureDate:
                          type: string
                          format: date-time
                        visitCount:
                          type: integer
                          example: 3
                        totalSessionTime:
                          type: number
                          example: 45
                        lastVisitDate:
                          type: string
                          format: date-time
                        notes:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: "note_1"
                              note:
                                type: string
                                example: "Interested in 2BHK units"
                              createdAt:
                                type: string
                                format: date-time
    post:
      tags: [Team]
      summary: Create Lead
      description: Create a new lead.
      operationId: createLead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - campaignId
              properties:
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                phone:
                  type: string
                  example: "+1 (555) 123-4567"
                campaignId:
                  type: string
                  example: "camp_1"
      responses:
        '201':
          description: Lead created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /team/leads/{leadId}:
    patch:
      tags: [Team]
      summary: Update Lead
      description: Update an existing lead.
      operationId: updateLead
      parameters:
        - in: path
          name: leadId
          required: true
          schema:
            type: string
          example: "lead_1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                phone:
                  type: string
                  example: "+1 (555) 123-4567"
                status:
                  type: string
                  enum: [new, qualified, contacted, converted]
                  example: "qualified"
      responses:
        '200':
          description: Lead updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /team/leads/{leadId}/notes:
    post:
      tags: [Team]
      summary: Add Lead Note
      description: Add a note to a lead.
      operationId: addLeadNote
      parameters:
        - in: path
          name: leadId
          required: true
          schema:
            type: string
          example: "lead_1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - note
              properties:
                note:
                  type: string
                  example: "Customer showed interest in premium units"
      responses:
        '201':
          description: Note added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "note_1"
                      note:
                        type: string
                        example: "Customer showed interest in premium units"
                      createdAt:
                        type: string
                        format: date-time

  /team/stats:
    get:
      tags: [Team]
      summary: Get Team Stats
      description: Get statistics for the team.
      operationId: getTeamStats
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
      responses:
        '200':
          description: Team statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalMembers:
                        type: integer
                        example: 15
                      activeMembers:
                        type: integer
                        example: 12
                      totalCampaigns:
                        type: integer
                        example: 8
                      activeCampaigns:
                        type: integer
                        example: 6
                      totalLeads:
                        type: integer
                        example: 245
                      qualifiedLeads:
                        type: integer
                        example: 98
                      convertedLeads:
                        type: integer
                        example: 37
                      conversionRate:
                        type: number
                        example: 0.151

  /workspaces:
    get:
      tags: [Workspaces]
      summary: List Workspaces
      description: Get a list of all workspaces accessible to the current user based on their role.
      operationId: listWorkspaces
      responses:
        '200':
          description: List of workspaces.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "apexmarketing"
                        name:
                          type: string
                          example: "Apex Marketing"
                        description:
                          type: string
                          example: "Digital marketing agency specializing in real estate campaigns"
                        adminEmail:
                          type: string
                          example: "david@apexmarketing.com"
                        adminName:
                          type: string
                          example: "Deepak Verma"
                        status:
                          type: string
                          enum: [active, suspended, disabled]
                          example: "active"
                        currentBalance:
                          type: number
                          example: 15000
                        monthlyBudget:
                          type: number
                          example: 3000
                        budgetAction:
                          type: string
                          enum: [alert, block, none]
                          example: "alert"
                        projectId:
                          type: string
                          example: "rav_project"
                        projectName:
                          type: string
                          example: "RAV Project"
                        teamMemberCount:
                          type: integer
                          example: 5
                        sessionsThisMonth:
                          type: integer
                          example: 150
                        creditsUsedThisMonth:
                          type: number
                          example: 1200
                        budgetUsagePercentage:
                          type: number
                          example: 40
                        isOverBudget:
                          type: boolean
                          example: false
                        giftedCredits:
                          type: number
                          example: 5000
                        purchasedCredits:
                          type: number
                          example: 10000
                        totalCreditsUsed:
                          type: number
                          example: 1200
                        remainingGiftedCredits:
                          type: number
                          example: 4000
                        remainingPurchasedCredits:
                          type: number
                          example: 9800
    post:
      tags: [Workspaces]
      summary: Create Workspace
      description: Create a new workspace.
      operationId: createWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "New Workspace"
                description:
                  type: string
                  example: "Description of the new workspace"
      responses:
        '201':
          description: Workspace created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /workspaces/stats:
    get:
      tags: [Workspaces]
      summary: Get Workspace Stats
      description: Get statistics for all workspaces.
      operationId: getWorkspaceStats
      responses:
        '200':
          description: Workspace statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalWorkspaces:
                        type: integer
                        example: 2
                      activeWorkspaces:
                        type: integer
                        example: 2
                      suspendedWorkspaces:
                        type: integer
                        example: 0
                      totalCreditsAllocated:
                        type: number
                        example: 23000
                      totalCreditsUsed:
                        type: number
                        example: 2000
                      averageUsagePerWorkspace:
                        type: number
                        example: 1000
                      topWorkspaces:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "apexmarketing"
                            name:
                              type: string
                              example: "Apex Marketing"
                            usage:
                              type: number
                              example: 1200
                            percentage:
                              type: number
                              example: 60

  /workspaces/{workspaceId}:
    get:
      tags: [Workspaces]
      summary: Get Workspace Details
      description: Get detailed information about a specific workspace.
      operationId: getWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
          example: "apexmarketing"
      responses:
        '200':
          description: Workspace details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object



  /analytics/usage:
    get:
      tags: [Analytics]
      summary: Get Usage Analytics
      description: Get usage analytics data with optional filters.
      operationId: getUsageAnalytics
      parameters:
        - in: query
          name: dateRange
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
          example: "7d"
        - in: query
          name: filterType
          required: false
          schema:
            type: string
            enum: [workspace, campaign, member, project]
          example: "workspace"
        - in: query
          name: selectedFilter
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Usage analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalSessions:
                        type: integer
                        example: 245
                      totalHours:
                        type: integer
                        example: 122
                      avgSessionDuration:
                        type: integer
                        example: 30
                      totalCreditsUsed:
                        type: number
                        example: 2400
                      sessionsGrowth:
                        type: number
                        example: 12.5
                      hoursGrowth:
                        type: number
                        example: 8.3
                      durationGrowth:
                        type: number
                        example: -2.1
                      creditsGrowth:
                        type: number
                        example: 15.7
                      dailyData:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-15"
                            sessions:
                              type: integer
                              example: 8
                            hours:
                              type: integer
                              example: 4
                            credits:
                              type: number
                              example: 80
                            activeUsers:
                              type: integer
                              example: 6

  /analytics/leads:
    get:
      tags: [Analytics]
      summary: Get Lead Analytics
      description: Get lead analytics data with optional filters.
      operationId: getLeadAnalytics
      parameters:
        - in: query
          name: dateRange
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
          example: "7d"
        - in: query
          name: filterType
          required: false
          schema:
            type: string
            enum: [workspace, campaign, member, project]
          example: "campaign"
        - in: query
          name: selectedFilter
          required: false
          schema:
            type: string
          example: "camp_1"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Lead analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "lead_1"
                        firstName:
                          type: string
                          example: "Anjali"
                        lastName:
                          type: string
                          example: "Sharma"
                        email:
                          type: string
                          example: "anjali.sharma@gmail.com"
                        phone:
                          type: string
                          example: "+91 98765-43210"
                        campaignId:
                          type: string
                          example: "camp_1"
                        campaignName:
                          type: string
                          example: "Monsoon Magic"
                        projectName:
                          type: string
                          example: "River Castle Project"
                        status:
                          type: string
                          enum: [new, qualified, contacted, converted]
                          example: "new"
                        createdAt:
                          type: string
                          format: date-time
                        lastActivity:
                          type: string
                          format: date-time
                        visitCount:
                          type: integer
                          example: 3
                        totalSessionTime:
                          type: number
                          example: 45
                        source:
                          type: string
                          example: "Facebook"
                        notes:
                          type: string
                          example: "Interested in 2BHK units"
                        workspaceId:
                          type: string
                          example: "apexmarketing"
                        createdBy:
                          type: string
                          example: "user_david"
                        captureDate:
                          type: string
                          format: date-time

  /analytics/geographic:
    get:
      tags: [Analytics]
      summary: Get Geographic Analytics
      description: Get geographic analytics data with optional filters.
      operationId: getGeographicAnalytics
      parameters:
        - in: query
          name: dateRange
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
          example: "7d"
        - in: query
          name: filterType
          required: false
          schema:
            type: string
            enum: [workspace, campaign, member, project]
          example: "workspace"
        - in: query
          name: selectedFilter
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Geographic analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Bengaluru, Karnataka"
                        sessions:
                          type: integer
                          example: 1205
                        percentage:
                          type: number
                          example: 35.3

  /analytics/devices:
    get:
      tags: [Analytics]
      summary: Get Device Analytics
      description: Get device analytics data with optional filters.
      operationId: getDeviceAnalytics
      parameters:
        - in: query
          name: dateRange
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
          example: "7d"
        - in: query
          name: filterType
          required: false
          schema:
            type: string
            enum: [workspace, campaign, member, project]
          example: "workspace"
        - in: query
          name: selectedFilter
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Device analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        device:
                          type: string
                          example: "Desktop"
                        sessions:
                          type: integer
                          example: 600
                        percentage:
                          type: number
                          example: 60
                        browsers:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "Chrome"
                              sessions:
                                type: integer
                                example: 350
                              percentage:
                                type: number
                                example: 58.3
                        operatingSystems:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "Windows"
                              sessions:
                                type: integer
                                example: 400
                              percentage:
                                type: number
                                example: 66.7

  /analytics/network:
    get:
      tags: [Analytics]
      summary: Get Network Analytics
      description: Get network analytics data with optional filters.
      operationId: getNetworkAnalytics
      parameters:
        - in: query
          name: dateRange
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
          example: "7d"
        - in: query
          name: filterType
          required: false
          schema:
            type: string
            enum: [workspace, campaign, member, project]
          example: "workspace"
        - in: query
          name: selectedFilter
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Network analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalSessions:
                        type: integer
                        example: 1000
                      averageSessionDuration:
                        type: number
                        example: 25.5
                      peakConcurrentUsers:
                        type: integer
                        example: 45
                      bandwidthUsed:
                        type: number
                        example: 2.5
                      dataTransferred:
                        type: number
                        example: 15.8
                      connectionQuality:
                        type: object
                        properties:
                          excellent:
                            type: number
                            example: 65
                          good:
                            type: number
                            example: 25
                          fair:
                            type: number
                            example: 8
                          poor:
                            type: number
                            example: 2
                      networkTypes:
                        type: object
                        properties:
                          wifi:
                            type: number
                            example: 70
                          ethernet:
                            type: number
                            example: 20
                          cellular:
                            type: number
                            example: 8
                          other:
                            type: number
                            example: 2
                      latency:
                        type: object
                        properties:
                          average:
                            type: number
                            example: 45
                          min:
                            type: number
                            example: 12
                          max:
                            type: number
                            example: 120
                          p95:
                            type: number
                            example: 78
                      throughput:
                        type: object
                        properties:
                          average:
                            type: number
                            example: 15.2
                          min:
                            type: number
                            example: 2.1
                          max:
                            type: number
                            example: 45.8
                          p95:
                            type: number
                            example: 28.5

  /analytics/project-usage:
    get:
      tags: [Analytics]
      summary: Get Project Usage Analytics
      description: Get project usage analytics data with optional filters.
      operationId: getProjectUsageAnalytics
      parameters:
        - in: query
          name: dateRange
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
          example: "7d"
        - in: query
          name: filterType
          required: false
          schema:
            type: string
            enum: [workspace, campaign, member, project]
          example: "workspace"
        - in: query
          name: selectedFilter
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
      responses:
        '200':
          description: Project usage analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        projectId:
                          type: string
                          example: "river_castle_project"
                        projectName:
                          type: string
                          example: "River Castle Project"
                        sessions:
                          type: integer
                          example: 245
                        credits:
                          type: number
                          example: 2400
                        lastAccessed:
                          type: string
                          format: date-time
                        averageSessionDuration:
                          type: integer
                          example: 15
                        uniqueUsers:
                          type: integer
                          example: 180
                        status:
                          type: string
                          example: "active"
                        category:
                          type: string
                          example: "real_estate"
                        tags:
                          type: array
                          items:
                            type: string
                          example: ["luxury", "apartments", "virtual_tour", "real_estate"]
                        workspaces:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "Apex Marketing"
                              sessions:
                                type: integer
                                example: 150
                              credits:
                                type: number
                                example: 1500

  /analytics/export-leads:
    post:
      tags: [Analytics]
      summary: Export Leads
      description: Export leads analytics data.
      operationId: exportLeadsAnalytics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dateRange:
                  type: string
                  example: "7d"
                filterType:
                  type: string
                  example: "campaign"
                selectedFilter:
                  type: string
                  example: "camp_1"
                format:
                  type: string
                  enum: [csv, xlsx]
                  example: "csv"
      responses:
        '200':
          description: Export successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      downloadUrl:
                        type: string
                        example: "https://api.berryfi.studio/v1/exports/leads_1705312200000.csv"
                  message:
                    type: string
                    example: "Leads exported successfully"

  /leads/{leadId}/journey:
    get:
      tags: [Analytics]
      summary: Get Customer Journey
      description: Get the customer journey for a specific lead.
      operationId: getCustomerJourney
      parameters:
        - in: path
          name: leadId
          required: true
          schema:
            type: string
          example: "lead_1"
      responses:
        '200':
          description: Customer journey data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      leadId:
                        type: string
                        example: "lead_1"
                      customerName:
                        type: string
                        example: "Anjali Sharma"
                      customerEmail:
                        type: string
                        example: "anjali.sharma@gmail.com"
                      customerPhone:
                        type: string
                        example: "+91 98765-43210"
                      interactions:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "interaction_1"
                            type:
                              type: string
                              enum: [lead_captured, session_started, session_ended, campaign_clicked]
                              example: "lead_captured"
                            timestamp:
                              type: string
                              format: date-time
                            campaignId:
                              type: string
                              example: "camp_1"
                            campaignName:
                              type: string
                              example: "Monsoon Magic"
                            device:
                              type: string
                              example: "Desktop"
                            location:
                              type: string
                              example: "Mumbai, India"
                            referralSource:
                              type: string
                              example: "Facebook"
                            sessionId:
                              type: string
                              example: "session_lead_1_0"
                            duration:
                              type: number
                              example: 45
                            endReason:
                              type: string
                              enum: [user_disconnect, timeout, error, admin_stop]
                              example: "user_disconnect"
                      totalSessions:
                        type: integer
                        example: 3
                      totalTime:
                        type: number
                        example: 135
                      firstInteraction:
                        type: string
                        format: date-time
                      lastInteraction:
                        type: string
                        format: date-time

  /reports/analytics:
    get:
      tags: [Reports]
      summary: Get Dashboard Analytics
      description: Get comprehensive dashboard analytics data for reports.
      operationId: getDashboardAnalytics
      responses:
        '200':
          description: Dashboard analytics data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      geographic:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Bengaluru, Karnataka"
                            sessions:
                              type: integer
                              example: 1205
                            percentage:
                              type: number
                              example: 35.3
                      devices:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Mobile"
                            sessions:
                              type: integer
                              example: 2150
                            percentage:
                              type: number
                              example: 63.0
                            icon:
                              type: string
                              example: "Smartphone"
                      operatingSystems:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Android"
                            sessions:
                              type: integer
                              example: 1980
                            percentage:
                              type: number
                              example: 58.0
                      browsers:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Chrome"
                            sessions:
                              type: integer
                              example: 2455
                            percentage:
                              type: number
                              example: 71.9
                      referrals:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Direct"
                            sessions:
                              type: integer
                              example: 1139
                            percentage:
                              type: number
                              example: 40.0
                            icon:
                              type: string
                              example: "Globe"
                      network:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Avg Load Time"
                            value:
                              type: string
                              example: "1.8s"
                      usageOverTime:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-15"
                            sessions:
                              type: integer
                              example: 120

  /api/audit/logs:
    get:
      tags: [Audit]
      summary: Get Audit Logs
      description: Get audit logs with optional filters.
      operationId: getAuditLogs
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: string
          example: "user_mithesh"
        - in: query
          name: actionType
          required: false
          schema:
            type: string
          example: "login"
        - in: query
          name: severity
          required: false
          schema:
            type: string
            enum: [low, medium, high, critical]
          example: "medium"
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-31"
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
          example: "login"
      responses:
        '200':
          description: Audit logs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      logs:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "log_1"
                            userId:
                              type: string
                              example: "user_mithesh"
                            userName:
                              type: string
                              example: "Mithesh Bhat"
                            actionType:
                              type: string
                              example: "login"
                            description:
                              type: string
                              example: "User logged in successfully"
                            severity:
                              type: string
                              enum: [low, medium, high, critical]
                              example: "low"
                            timestamp:
                              type: string
                              format: date-time
                            ipAddress:
                              type: string
                              example: "192.168.1.100"
                            userAgent:
                              type: string
                              example: "Mozilla/5.0..."
                            resource:
                              type: string
                              example: "/auth/login"
                            status:
                              type: string
                              enum: [success, failure, warning]
                              example: "success"
                      totalCount:
                        type: integer
                        example: 150
                      filteredCount:
                        type: integer
                        example: 25

  /api/audit/stats:
    get:
      tags: [Audit]
      summary: Get Audit Stats
      description: Get audit statistics with optional filters.
      operationId: getAuditStats
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: string
          example: "user_mithesh"
        - in: query
          name: actionType
          required: false
          schema:
            type: string
          example: "login"
        - in: query
          name: severity
          required: false
          schema:
            type: string
            enum: [low, medium, high, critical]
          example: "medium"
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-31"
      responses:
        '200':
          description: Audit stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalLogs:
                        type: integer
                        example: 150
                      totalUsers:
                        type: integer
                        example: 25
                      actionTypeBreakdown:
                        type: object
                        properties:
                          login:
                            type: integer
                            example: 45
                          logout:
                            type: integer
                            example: 40
                          project_access:
                            type: integer
                            example: 35
                          billing_action:
                            type: integer
                            example: 30
                      severityBreakdown:
                        type: object
                        properties:
                          low:
                            type: integer
                            example: 100
                          medium:
                            type: integer
                            example: 35
                          high:
                            type: integer
                            example: 10
                          critical:
                            type: integer
                            example: 5
                      timeSeriesData:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-15"
                            count:
                              type: integer
                              example: 8

  /api/audit/users:
    get:
      tags: [Audit]
      summary: Get Audit Users
      description: Get available users for audit filtering.
      operationId: getAuditUsers
      responses:
        '200':
          description: Audit users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "user_mithesh"
                        name:
                          type: string
                          example: "Mithesh Bhat"
                        email:
                          type: string
                          example: "mithesh@ravgroup.org"
                        role:
                          type: string
                          example: "org_owner"
                        lastActivity:
                          type: string
                          format: date-time

  /api/audit/action-types:
    get:
      tags: [Audit]
      summary: Get Audit Action Types
      description: Get available action types for audit filtering.
      operationId: getAuditActionTypes
      responses:
        '200':
          description: Audit action types.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: "login"
                        description:
                          type: string
                          example: "User authentication"
                        category:
                          type: string
                          example: "authentication"

  /api/audit/export:
    get:
      tags: [Audit]
      summary: Export Audit Logs
      description: Export audit logs with optional filters.
      operationId: exportAuditLogs
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: string
          example: "user_mithesh"
        - in: query
          name: actionType
          required: false
          schema:
            type: string
          example: "login"
        - in: query
          name: severity
          required: false
          schema:
            type: string
            enum: [low, medium, high, critical]
          example: "medium"
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-31"
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
          example: "login"
      responses:
        '200':
          description: Exported audit logs (file download).
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /api/usage/sessions:
    get:
      tags: [Usage]
      summary: Get Session Logs
      description: Get session logs with optional filters.
      operationId: getSessionLogs
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
        - in: query
          name: memberId
          required: false
          schema:
            type: string
          example: "user_david"
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-31"
      responses:
        '200':
          description: Session logs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "session_1"
                        projectName:
                          type: string
                          example: "River Castle Project"
                        projectId:
                          type: string
                          example: "river_castle_project"
                        workspace:
                          type: string
                          example: "Apex Marketing"
                        workspaceId:
                          type: string
                          example: "apexmarketing"
                        memberName:
                          type: string
                          example: "Deepak Verma"
                        memberId:
                          type: string
                          example: "user_david"
                        startTime:
                          type: string
                          format: date-time
                        duration:
                          type: number
                          example: 45
                        creditsConsumed:
                          type: number
                          example: 3.0
                        recorded:
                          type: boolean
                          example: true
                        campaignLinkId:
                          type: string
                          example: "campaign_1"
                        endReason:
                          type: string
                          enum: [user_disconnect, timeout, error, admin_stop]
                          example: "user_disconnect"

  /api/usage/stats:
    get:
      tags: [Usage]
      summary: Get Usage Stats
      description: Get usage statistics with optional filters.
      operationId: getUsageStats
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
        - in: query
          name: memberId
          required: false
          schema:
            type: string
          example: "user_david"
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-31"
      responses:
        '200':
          description: Usage stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalSessions:
                        type: integer
                        example: 50
                      totalCredits:
                        type: number
                        example: 200.0
                      totalDuration:
                        type: number
                        example: 2250
                      averageDuration:
                        type: number
                        example: 45.0
                      recordedSessions:
                        type: integer
                        example: 35
                      recordingRate:
                        type: number
                        example: 0.7
                      sessionsByDate:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "2024-01-15"
                            sessions:
                              type: integer
                              example: 8
                            credits:
                              type: number
                              example: 32.0
                      topProjects:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "River Castle Project"
                            sessions:
                              type: integer
                              example: 30
                            credits:
                              type: number
                              example: 120.0
                            duration:
                              type: number
                              example: 1350
                      topWorkspaces:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Apex Marketing"
                            sessions:
                              type: integer
                              example: 25
                            credits:
                              type: number
                              example: 100.0
                            duration:
                              type: number
                              example: 1125
                      topMembers:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "Deepak Verma"
                            sessions:
                              type: integer
                              example: 15
                            credits:
                              type: number
                              example: 60.0
                            duration:
                              type: number
                              example: 675

  /api/usage/workspaces:
    get:
      tags: [Usage]
      summary: Get Usage Workspaces
      description: Get available workspaces for usage filtering.
      operationId: getUsageWorkspaces
      responses:
        '200':
          description: Usage workspaces.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "workspace_1"
                        name:
                          type: string
                          example: "BerryFi Studio"

  /api/usage/members:
    get:
      tags: [Usage]
      summary: Get Usage Members
      description: Get available members for usage filtering.
      operationId: getUsageMembers
      responses:
        '200':
          description: Usage members.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "member_1"
                        name:
                          type: string
                          example: "John Doe"
                        admin:
                          type: string
                          example: "super@berryfi.studio"

  /api/usage/export:
    get:
      tags: [Usage]
      summary: Export Usage Data
      description: Export usage data with optional filters.
      operationId: exportUsageData
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
          example: "apexmarketing"
        - in: query
          name: projectId
          required: false
          schema:
            type: string
          example: "river_castle_project"
        - in: query
          name: memberId
          required: false
          schema:
            type: string
          example: "user_david"
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
          example: "2024-01-31"
      responses:
        '200':
          description: Exported usage data (file download).
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
